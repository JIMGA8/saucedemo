name: CI con Xray y Jira

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-test-xray:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout c√≥digo
        uses: actions/checkout@v3

      - name: Configurar JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Dar permisos a gradlew
        run: chmod +x gradlew

      - name: Instalar Google Chrome
        run: |
          wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
          sudo apt install -y ./google-chrome-stable_current_amd64.deb

      - name: Build y pruebas
        run: ./gradlew clean test

      - name: Subir resultados Cucumber a Xray
        env:
          XRAY_CLIENT_ID: ${{ secrets.XRAY_CLIENT_ID }}
          XRAY_CLIENT_SECRET: ${{ secrets.XRAY_CLIENT_SECRET }}
        run: |
          TOKEN=$(curl -s -X POST https://xray.cloud.getxray.app/api/v2/authenticate \
            -H 'Content-Type: application/json' \
            -d '{"client_id": "'"$XRAY_CLIENT_ID"'", "client_secret": "'"$XRAY_CLIENT_SECRET"'"}' | tr -d '"')

          curl -H "Authorization: Bearer $TOKEN" \
            -F "file=@app/target/cucumber.json" \
            "https://xray.cloud.getxray.app/api/v2/import/execution/cucumber?projectKey=${{ secrets.PROJECT_KEY }}"

      - name: Crear Test Plan en Jira si no existe
        run: |
          PLAN_NAME="Automated Regression Plan"
          PROJECT_KEY="${{ secrets.PROJECT_KEY }}"
          JIRA_BASE_URL="${{ secrets.JIRA_BASE_URL }}"
          AUTH=$(echo -n "${{ secrets.JIRA_USERNAME }}:${{ secrets.JIRA_API_TOKEN }}" | base64)

          QUERY="project = $PROJECT_KEY AND summary ~ \"$PLAN_NAME\" AND issuetype = \"Test Plan\""
          SEARCH_URL="$JIRA_BASE_URL/rest/api/3/search?jql=$(echo $QUERY | jq -sRr @uri)"

          RESULT=$(curl -s -H "Authorization: Basic $AUTH" -H "Accept: application/json" "$SEARCH_URL")
          EXISTING_PLAN_KEY=$(echo "$RESULT" | jq -r '.issues[0].key')

          if [ "$EXISTING_PLAN_KEY" == "null" ]; then
            echo "Creando nuevo Test Plan..."
            CREATE_BODY=$(cat <<'EOF'
{
  "fields": {
    "project": { "key": "'"$PROJECT_KEY"'" },
    "summary": "'"$PLAN_NAME"'",
    "issuetype": { "name": "Test Plan" }
  }
}
EOF
)
            CREATE_RES=$(curl -s -X POST "$JIRA_BASE_URL/rest/api/3/issue" \
              -H "Authorization: Basic $AUTH" \
              -H "Content-Type: application/json" \
              -d "$CREATE_BODY")
            echo "Test Plan creado:"
            echo "$CREATE_RES"
          else
            echo "Ya existe el Test Plan con key: $EXISTING_PLAN_KEY"
          fi
